{"version":3,"file":"node.es5.esm.js","sources":["../src/common/State.js","../src/common/ApolloClient.js","../src/common/ReduxRouter.js","../src/client/loadImport.js","../src/server/loadImport.js","../src/common/Intl.js","../src/common/wrapApplication.js","../src/common/deepFetch.js","../src/common/routed.js","../src/client/getBrowserLocale.js","../src/common/createKernel.js","../src/common/fetchData.js","../src/server/renderPage.js","../src/server/renderApplication.js","../src/server/getLocaleData.js","../src/server/prepareResponse.js","../src/server/debug.js","../src/server.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\n\nconst composeEnhancers = (process.env.TARGET === \"web\" &&\n  process.env.NODE_ENV === \"development\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\n\n/**\n * Placeholder for a non active reducer in Redux.\n *\n * @param previousState {Object} Previous state.\n * @param action {string} Action which is being dispatched.\n */\nexport function emptyReducer(previousState = {}, action) {\n  return previousState\n}\n\n\n/**\n * Placeholder for a non active middleware in Redux.\n *\n * @param store {Object} Store object to work with.\n */\nexport function emptyMiddleware(store) {\n  return (next) => {\n    return (action) => {\n      return next(action)\n    }\n  }\n}\n\n\n/**\n * Placeholder for a non active enhancer in Redux.\n */\nexport function emptyEnhancer(param) {\n  return param\n}\n\n\n/**\n * Dummy reducer for exporting Edge Platform specific server-side data\n * to the client-side application.\n */\nexport function edgeReducer(previousState = {}, action) {\n  return previousState\n}\n\n\n\n\n/**\n * Selector for quering the nonce which must be used for injecting script tags.\n */\nexport function getNonce(state) {\n  return state.edge.nonce\n}\n\n\n/**\n * Bundles the given reducers into a root reducer for the application\n */\nexport function createRootReducer(reducers, router = null, apollo = null) {\n  const allReducers = {\n    // Application specific reducers\n    ...reducers,\n\n    // Edge Platform Data\n    edge: edgeReducer\n  }\n\n  // Integration point for Redux First Router\n  if (router) {\n    allReducers.location = router.reducer\n  }\n\n  // Support for Apollo-based GraphQL backends\n  if (apollo) {\n    allReducers.apollo = apollo.reducer()\n  }\n\n  return combineReducers(allReducers)\n}\n\n\n/**\n *\n *\n */\nexport function createReduxStore(config = {}) {\n  const {\n    reducers = {},\n    middlewares = [],\n    enhancers = [],\n    state = {},\n    router = null,\n    apollo = null\n  } = config\n\n  const rootReducer = createRootReducer(reducers, router, apollo)\n\n  const rootEnhancers = composeEnhancers(\n    applyMiddleware(\n      apollo ? apollo.middleware() : emptyMiddleware,\n\n      // Redux middleware that spits an error on you when you try to mutate\n      // your state either inside a dispatch or between dispatches.\n      // https://github.com/leoasis/redux-immutable-state-invariant\n      process.env.NODE_ENV === \"development\" ?\n        require(\"redux-immutable-state-invariant\").default() : emptyMiddleware,\n\n      // Basic Promise based async handling\n      thunk,\n\n      // Redux Router First Middleware\n      router ? router.middleware : emptyMiddleware,\n\n      // Application specific middlewares\n      ...middlewares,\n\n      // Add automatic state change logging for client application\n      // Note: Logger must be the last middleware in chain, otherwise it will log thunk and\n      // promise, not actual actions (https://github.com/evgenyrodionov/redux-logger/issues/20).\n      process.env.TARGET === \"web\" ?\n        require(\"redux-logger\").createLogger({ collapsed: true }) : emptyMiddleware\n    ),\n\n    // Redux First Router Enhancer\n    router ? router.enhancer : emptyEnhancer,\n\n    // Application specific enhancers\n    ...enhancers\n  )\n\n  const store = createStore(\n    rootReducer,\n    state,\n    rootEnhancers\n  )\n\n  return store\n}\n","import { ApolloClient, createNetworkInterface, createBatchingNetworkInterface } from \"react-apollo\"\n\nexport function createApolloClient(config = {}) {\n  const {\n    headers,\n    uri = null,\n    batchRequests = false,\n    trustNetwork = true,\n    queryDeduplication = true\n  } = config\n\n  const hasApollo = uri != null\n  const ssrMode = process.env.TARGET === \"node\"\n  var client\n\n  if (hasApollo) {\n    var opts = {\n      credentials: trustNetwork ? \"include\" : \"same-origin\",\n\n      // transfer request headers to networkInterface so that they're accessible to proxy server\n      // Addresses this issue: https://github.com/matthew-andrews/isomorphic-fetch/issues/83\n      headers\n    }\n\n    var networkInterface\n\n    if (batchRequests) {\n      networkInterface = createBatchingNetworkInterface({\n        uri,\n        batchInterval: 10,\n        opts\n      })\n    } else {\n      networkInterface = createNetworkInterface({\n        uri,\n        opts\n      })\n    }\n\n    client = new ApolloClient({\n      ssrMode,\n      queryDeduplication,\n      networkInterface\n    })\n  } else {\n    client = new ApolloClient({\n      ssrMode,\n      queryDeduplication\n    })\n  }\n\n  return client\n}\n","import { connectRoutes } from \"redux-first-router\"\n\n/* eslint-disable import/no-commonjs */\nconst createHistory = process.env.TARGET === \"web\" ?\n  require(\"history/createBrowserHistory\").default :\n  require(\"history/createMemoryHistory\").default\n\nexport function createReduxRouter(routes, path = null, config = {}) {\n  // match initial route to express path\n  const history = path ? createHistory({\n    initialEntries: [ path ]\n  }) : createHistory()\n\n  return connectRoutes(history, routes)\n}\n","/**\n * Asynchrnously loads the given import and returns a Promise.\n *\n * Acts on transpiled `import()` statements from\n * [babel-plugin-universal-import](https://www.npmjs.com/package/babel-plugin-universal-import).\n *\n * @param {Object} wrapped The return value from transpiled `import()` statements.\n * @returns {Promise} Promise which resolves with the default import of imported file (asynchronous, lazy loaded).\n */\nexport function loadImport(wrapped) {\n  return wrapped.then((module) => {\n    return module && module.__esModule ? module.default : module\n  })\n}\n\n/**\n * Pre-loads the module directly on the client without direct usage.\n *\n * Acts on transpiled `import()` statements from\n * [babel-plugin-universal-import](https://www.npmjs.com/package/babel-plugin-universal-import).\n *\n * @param {Object} wrapped The return value from transpiled `import()` statements.\n * @returns {Promise} Returns the promise for notification when preloading is ready.\n */\nexport function preloadImport(wrapped) {\n  return wrapped.load()\n}\n","/* global __webpack_require__ */\nimport { CHUNK_NAMES } from \"react-universal-component\"\n\n/**\n * Synchronously loads the given module on the server.\n *\n * Acts on transpiled `import()` statements from\n * [babel-plugin-universal-import](https://www.npmjs.com/package/babel-plugin-universal-import).\n *\n * @param {Object} wrapped The return value from transpiled `import()` statements.\n * @returns {any} The default export of the imported file (synchronously loaded).\n */\nexport function loadImport(wrapped) {\n  const module = __webpack_require__(wrapped.resolve())\n  return module && module.__esModule ? module.default : module\n}\n\n/**\n * Register the module for being pre-loaded on the *client*. This has no\n * effect on the server other than injecting the chunk name for flusing to\n * the generated HTML.\n *\n * Acts on transpiled `import()` statements from\n * [babel-plugin-universal-import](https://www.npmjs.com/package/babel-plugin-universal-import).\n *\n * @param {Object} wrapped The return value from transpiled `import()` statements.\n */\nexport function preloadImport(wrapped) {\n  CHUNK_NAMES.add(wrapped.chunkName())\n}\n","import areIntlLocalesSupported from \"intl-locales-supported\"\nimport { addLocaleData } from \"react-intl\"\n\nimport {\n  loadImport as loadImportClient\n} from \"../client/loadImport\"\n\nimport {\n  loadImport as loadImportServer,\n  preloadImport as preloadImportServer\n} from \"../server/loadImport\"\n\n\n\nconst PREFER_NATIVE = true\n\nvar intlSupportTable\nif (process.env.TARGET === \"node\") {\n  intlSupportTable = require(\"caniuse-lite\").feature(\n    require(\"caniuse-lite/data/features/internationalization.js\")\n  )\n}\n\nexport function requiresIntlPolyfill(locale) {\n  // Determine if the built-in `Intl` has the locale data we need.\n  if (PREFER_NATIVE && global.Intl && areIntlLocalesSupported([ locale ])) {\n    return false\n  }\n\n  // By default Node only ships with basic English locale data. You can however build a\n  // Node binary with all locale data. We recommend doing this if you control the container\n  // your Node app runs in, otherwise you'll want to polyfill Intl in Node.\n  // Via: https://github.com/yahoo/react-intl/wiki#i18n-in-javascript\n  if (PREFER_NATIVE === false && process.env.TARGET === \"node\")\n  {\n    /* eslint-disable no-console */\n    console.warn(\"Your NodeJS installation does not include full ICU locale data! Fallback to polyfill!\")\n    console.warn(\"See also: https://github.com/nodejs/node/wiki/Intl\")\n  }\n\n  return true\n}\n\nexport function installIntlPolyfill() {\n  const Polyfill = global.IntlPolyfill\n  if (!Polyfill) {\n    console.log(\"Can't find IntlPolyfill global!\")\n    return\n  }\n\n  // `Intl` exists, but it doesn't have the data we need, so load the\n  // polyfill and patch the constructors we need with the polyfill's.\n  if (global.Intl) {\n    Intl.NumberFormat = Polyfill.NumberFormat\n    Intl.DateTimeFormat = Polyfill.DateTimeFormat\n  } else {\n    global.Intl = Polyfill\n  }\n}\n\nexport function requiresReactIntl() {\n  // Locale Data in Node.js:\n  // When using React Intl in Node.js (same for the Intl.js polyfill), all locale data will be\n  // loaded into memory. This makes it easier to write a universal/isomorphic React app with\n  // React Intl since you won't have to worry about dynamically loading locale data on the server.\n  // Via: https://github.com/yahoo/react-intl/wiki#locale-data-in-nodejs\n\n  // As mentioned above no additional data has to be loaded for NodeJS. We are just resolving\n  // the Promise in that case.\n  if (process.env.TARGET === \"node\") {\n    return false\n  }\n\n  return true\n}\n\nexport function installReactIntl(response) {\n  if (process.env.TARGET !== \"node\") {\n    addLocaleData(response)\n  }\n}\n\n\n/**\n * Selector for quering the current locale e.g. de-DE, en-US, ...\n */\nexport function getLocale(state) {\n  return state.edge.intl.locale\n}\n\n\n/**\n * Selector for quering the current language e.g. de, en, fr, es, ...\n */\nexport function getLanguage(state) {\n  return state.edge.intl.language\n}\n\n\n/**\n * Selector for quering the current region e.g. DE, BR, PT, ...\n */\nexport function getRegion(state) {\n  return state.edge.intl.region\n}\n\n\n// Note:\n// As long as Rollup does not support dynamic `import()` we unfortunately have to implement\n// the loading part of intl files and general all code splitting in the real application\n// and not in any shared library. There is currently a way to transpile `import()` to\n// `require.ensure()` which does 50% of the equation - and is supported by *prepublish* but the\n// remaining part to define code splitting via `webpackChunkName` is not solvable right now.\n\nexport function ensureReactIntlSupport(importWrapper, intl) {\n  // React-Intl always loads monolithically with all locales in NodeJS\n  if (process.env.TARGET === \"node\") {\n    return preloadImportServer(importWrapper)\n  } else {\n    return loadImportClient(importWrapper).then(installReactIntl)\n  }\n}\n\n/* eslint-disable max-params */\nexport function ensureIntlSupport(importWrapper, intl, browser) {\n  const hasIntlSupport = global.Intl && areIntlLocalesSupported([ intl.locale ])\n\n  if (process.env.TARGET === \"node\") {\n    if (!hasIntlSupport) {\n      loadImportServer(importWrapper)\n    }\n\n    let clientHasIntl = false\n    try {\n      // TODO: Make this smarter and more error tolerant\n      if (intlSupportTable.stats[browser.family.toLowerCase()][browser.major] === \"y\") {\n        clientHasIntl = true\n      }\n    } catch (error) {\n      console.log(\"Error during querying support table:\", error)\n      // pass\n    }\n\n    if (!clientHasIntl) {\n      preloadImportServer(importWrapper)\n    }\n  } else if (!hasIntlSupport) {\n    return loadImportClient(importWrapper).then(installIntlPolyfill)\n  }\n\n  return null\n}\n","import React from \"react\"\n\nimport { Provider } from \"react-redux\"\nimport { ApolloProvider } from \"react-apollo\"\nimport { IntlProvider } from \"react-intl\"\n\n/**\n * Wraps the application class with different providers for offering the\n * following features:\n *\n * - Apollo GraphQL\n * - Redux\n * - React Intl\n *\n * This might be extended with new features during development.\n *\n * @param {React.Component} Application The React root application component.\n * @param {Kernel} kernel Kernel instance which holds the data oriented runtime state.\n * @returns {React.Component} Returns the wrapped application component.\n */\nexport default function wrapApplication(Application, kernel) {\n  let Wrapped = Application\n\n  if (kernel.apollo) {\n    Wrapped = (\n      <ApolloProvider client={kernel.apollo} store={kernel.store}>\n        {Wrapped}\n      </ApolloProvider>\n    )\n  }\n\n  if (kernel.store) {\n    Wrapped = (\n      <Provider store={kernel.store}>\n        {Wrapped}\n      </Provider>\n    )\n  }\n\n  if (kernel.intl) {\n    Wrapped = (\n      <IntlProvider locale={kernel.intl.locale}>\n        {Wrapped}\n      </IntlProvider>\n    )\n  }\n\n  return Wrapped\n}\n","import reactTreeWalker from \"react-tree-walker\"\n\n/* eslint-disable no-shadow */\n/* eslint-disable max-params */\nexport default function deepFetch(rootElement)\n{\n  function visitor(element, instance, context) {\n    if (instance && typeof instance.fetchData === \"function\") {\n      return instance.fetchData()\n    }\n\n    return true\n  }\n\n  return reactTreeWalker(rootElement, visitor)\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\n\n/**\n * Wraps the given component to make it only visible when the current\n * navigation matches the redux router type.\n *\n * @param {Component} ChildComponent Component to wrap.\n * @param {string} type Redux-Route Type to match for make visible.\n */\nexport default function routed(ChildComponent, type) {\n  function RouteTarget({ currentLocation, currentPayload }) {\n    if (type === currentLocation) {\n      return (\n        <ChildComponent {...currentPayload}/>\n      )\n    }\n\n    return null\n  }\n\n  RouteTarget.propTypes = {\n    type: PropTypes.string,\n    currentLocation: PropTypes.string,\n    currentPayload: PropTypes.object\n  }\n\n  function mapStateToProps(state, ownProps) {\n    return {\n      currentLocation: state.location.type,\n      currentPayload: state.location.payload\n    }\n  }\n\n  return connect(mapStateToProps)(RouteTarget)\n}\n","/**\n * Returns the browser locale settings based on available locales and browser settings.\n *\n * @param {Array} supportedLocales List of supported locales by the application.\n */\nexport default function getBrowserLocale(supportedLocales) {\n  return process.env.TARGET === \"web\" ? _getBrowserLocale(supportedLocales) : null\n}\n\nfunction _getBrowserLocale(supportedLocales) {\n  const supported = new Set(supportedLocales)\n  const available = new Set()\n\n  // Modern standard: Support by modern Chrome, Safari and Firefox\n  const languages = navigator.languages\n  if (languages) {\n    for (let lang of languages) {\n      if (supported.has(lang)) {\n        available.add(lang)\n      }\n    }\n  }\n\n  // Microsoft standard\n  const userLanguage = navigator.userLanguage\n  if (userLanguage) {\n    const wellFormedUserLanguage = (() => {\n      const splitted = userLanguage.split(\"-\")\n      return `${splitted[0]}-${splitted[1].toUpperCase()}`\n    })()\n\n    if (supported.has(wellFormedUserLanguage)) {\n      available.add(wellFormedUserLanguage)\n    }\n  }\n\n  // Legacy API\n  const language = navigator.language\n  if (language && supported.has(language)) {\n    available.add(language)\n  }\n\n  // Return only the first match\n  const first = Array.from(available.values())[0]\n  return first ? {\n    locale: first,\n    language: first.split(\"-\")[0],\n    region: first.split(\"-\")[1] || first.split(\"-\")[0].toUpperCase()\n  } : null\n}\n","import { createReduxRouter } from \"./ReduxRouter\"\nimport { createApolloClient } from \"./ApolloClient\"\nimport { createReduxStore } from \"./State\"\nimport getBrowserLocale from \"../client/getBrowserLocale\"\n\nconst defaultState = process.env.TARGET === \"web\" ? window.APP_STATE : null\n\n/**\n *\n * @param {*} State\n * @param {*} param1\n */\nexport default function createKernel(State, { state = defaultState, edge, request } = {}) {\n  // Use given edge instance when not already defined on state\n  if (process.env.TARGET === \"node\" && edge != null) {\n    if (!state.edge) {\n      state.edge = edge\n    }\n  }\n\n  if (process.env.TARGET === \"web\" && state.edge.intl == null) {\n    console.warn(\"Fallback to client side locale information!\")\n\n    // FIXME: Retrieve data from build config\n    const supportedLocales = []\n    state.edge.intl = getBrowserLocale(supportedLocales)\n  }\n\n  let router = createReduxRouter(\n    State.getRoutes(),\n    request ? request.path : null\n  )\n\n  const apolloClientConfig =\n    State.getApolloClientConfig && State.getApolloClientConfig() ?\n      State.getApolloClientConfig() :\n      { uri: null }\n\n  let apollo = createApolloClient(apolloClientConfig)\n\n  let store = createReduxStore({\n    reducers: State.getReducers(),\n    enhancers: State.getEnhancers(),\n    middlewares: State.getMiddlewares(),\n    state,\n    router,\n    apollo\n  })\n\n  let intl = state.edge.intl\n\n  // Kernel \"Instance\"\n  return {\n    intl,\n    router,\n    apollo,\n    store\n  }\n}\n","import deepFetch from \"./deepFetch\"\n\nexport default async function fetchData(WrappedApplication, kernel) {\n  // Asynchronous magic... loading required application data\n  // Supports parallel loading of either Apollo-style (aka fetchData())\n  // and Redux-First-Router aka thunks attached to paths\n  const start = new Date()\n  console.log(\"[EDGE] Fetching data...\")\n  const result = await Promise.all([\n    kernel.router.thunk(kernel.store),\n    deepFetch(WrappedApplication)\n  ])\n\n  console.log(`[EDGE] Done in ${new Date() - start}ms`)\n  return result\n}\n","import serialize from \"serialize-javascript\"\nimport Helmet from \"react-helmet\"\n\n/**\n * Generates a full HTML page containing the render output of the given react element.\n *\n * @param config {Object} Configuration.\n * @param config.state {Object} [{}] The initial state for the redux store which will be used by the\n *   client to mount the redux store into the desired state.\n * @param config.html {string} The rendered HTML content.\n * @param config.styles {string} [\"\"] Styles to inject into the page.\n * @param config.scripts {string} [\"\"] Scripts to inject into the page.\n * @returns The full HTML page in the form of a React element.\n */\nexport default function renderPage({\n  state,\n  html,\n  styles,\n  scripts\n}) {\n  if (typeof state !== \"object\" || typeof state.edge !== \"object\") {\n    throw new Error(\"[EDGE]: RenderPage: Invalid state object!\")\n  }\n\n  if (typeof html !== \"string\" || html.length === 0) {\n    throw new Error(\"[EDGE]: RenderPage: Invalid html string!\")\n  }\n\n  if (typeof styles !== \"string\" || styles.length === 0) {\n    throw new Error(\"[EDGE]: RenderPage: Invalid styles string!\")\n  }\n\n  if (typeof scripts !== \"string\" || scripts.length === 0) {\n    throw new Error(\"[EDGE]: RenderPage: Invalid scripts string!\")\n  }\n\n  const edge = state.edge\n  const helmet = Helmet.renderStatic()\n  const inlineCode = `APP_STATE=${serialize(state, { isJSON: true })};`\n  const nonceHtml = edge.nonce ? `nonce=\"${edge.nonce}\"` : \"\"\n\n  return `\n<!doctype html>\n<html lang=\"${edge.intl.locale}\" ${helmet.htmlAttributes.toString()}>\n  <head>\n    ${helmet.title.toString()}\n    ${helmet.meta.toString()}\n    ${helmet.link.toString()}\n    ${styles}\n    ${helmet.style.toString()}\n  </head>\n  <body>\n    <div id=\"root\">${html}</div>\n    <script ${nonceHtml}>${inlineCode}</script>\n    ${scripts}\n    ${helmet.script.toString()}\n  </body>\n</html>`\n}\n","import ReactDOM from \"react-dom/server\"\nimport { flushChunkNames } from \"react-universal-component/server\"\nimport flushChunks from \"webpack-flush-chunks\"\nimport { NOT_FOUND } from \"redux-first-router\"\n\nimport renderPage from \"./renderPage\"\n\n/* eslint-disable max-params, no-console */\nexport default function renderApplication({ Application, clientStats, kernel, request, response }) {\n  console.log(\"[EDGE] Exporting current state...\")\n  const state = kernel.store.getState()\n\n  // the idiomatic way to handle routes not found :)\n  // your component's should also detect this state and render a 404 scene\n  const location = state.location\n  let httpStatus = 200\n  if (location.type === NOT_FOUND) {\n    /* eslint-disable no-magic-numbers */\n    httpStatus = 404\n  } else if (location.kind === \"redirect\") {\n    // By using history.replace() behind the scenes, the private URL the user\n    // tried to access now becomes the /login URL in the stack, and the user\n    // can go back to the previous page just as he/she would expect.\n    return response.redirect(302, location.pathname)\n  }\n\n  console.log(\"[EDGE] Rendering application...\")\n  let html = \"\"\n  try {\n    html = ReactDOM.renderToString(Application)\n  } catch (err) {\n    console.error(\"Unable to render server side React:\", err)\n  }\n\n  console.log(\"[EDGE] Flushing chunks...\")\n  const chunkNames = flushChunkNames()\n  console.log(\"[EDGE] Rendered Chunk Names:\", chunkNames.join(\", \"))\n  const { js, styles, cssHash } = flushChunks(clientStats, { chunkNames })\n  console.log(\"[EDGE] Flushed Script Tags:\\n\" + js.toString() + \"\\n\")\n  console.log(\"[EDGE] Flushed CSS Tags:\\n\" + styles.toString() + \"\\n\")\n\n  // TODO: Support SRI integrity checksums as added by SRI Webpack Plugin\n  // https://www.npmjs.com/package/webpack-subresource-integrity#without-htmlwebpackplugin\n\n  // Render full HTML page using external helper\n  console.log(\"Rendering Page...\")\n  const renderedPage = renderPage({\n    state,\n    html,\n    styles: styles.toString(),\n    scripts: cssHash + js.toString()\n  })\n\n  // Make sure that the actual dynamically rendered page is never being cached\n  response.setHeader(\"Cache-Control\", \"no-cache\")\n\n  // Send actual content\n  console.log(\"[EDGE] Sending Page...\")\n  return response.status(httpStatus).send(renderedPage)\n}\n","export default function getLocaleData(request) {\n  let locale = request.locale\n  let language = null\n  let region = null\n  let source = null\n\n  if (locale)\n  {\n    language = locale.language\n    region = locale.region\n    source = locale.source\n    locale = `${language}-${region}`\n  }\n  else\n  {\n    console.warn(\"Locale not auto-detected by server!\")\n\n    locale = process.env.DEFAULT_LOCALE\n    if (locale) {\n      source = \"env\"\n      let splitted = locale.split(\"-\")\n      language = splitted[0]\n      region = splitted[1]\n    } else {\n      locale = \"en-US\"\n      language = \"en\"\n      region = \"US\"\n      source = \"default\"\n    }\n  }\n\n  console.log(`Using locale: ${locale} via ${source}`)\n\n  return {\n    locale,\n    language,\n    region\n  }\n}\n","import { parse } from \"edge-useragent\"\n\nimport getLocaleData from \"./getLocaleData\"\n\nexport default function prepareResponse(request) {\n  const intl = getLocaleData(request)\n  const browser = parse(request.headers[\"user-agent\"])\n\n  return {\n    intl,\n    browser\n  }\n}\n","import codeFrame from \"babel-code-frame\"\nimport chalk from \"chalk\"\nimport { wrapCallSite } from \"source-map-support\"\nimport { readFileSync } from \"fs\"\n\nconst FUNCTION_NAME_FILTERS = [ /__webpack_require__/ ]\nconst SOURCE_FILE_FILTERS = [ /\\/webpack\\/bootstrap/ ]\n\nconst FUNCTION_NAME_CLEARANCE = [ /__webpack_exports__/ ]\nconst TYPE_NAME_CLEARANCE = [ /^Object$/ ]\n\nconst CODE_FRAME_OPTIONS = {\n  highlightCode: true\n}\n\n\n/**\n * Cleans up the source file name which was modified by `source-map-support` to point to the source mapped\n * origin file. Unfortunately instead of giving us the pure source file it resolves into something\n * like \"<generatedFile>:<sourceFile>\". We take care of this here and remove the generated file segment\n * as this is typically not relevant for the developer.\n *\n * @param {string} sourceFile Sourcefile as being available in the CallSite.\n * @returns {string} Cleaned up plain source file reference.\n */\nexport function cleanSourceFileName(sourceFile)\n{\n  var cleanFile = sourceFile.split(\":\")[1] || sourceFile\n  if (cleanFile.charAt(0) === \"/\") {\n    cleanFile = cleanFile.slice(1)\n  }\n\n  return cleanFile\n}\n\n\n/**\n * This method checks whether the given stack frame (CallSite) is relevant from a\n * developer perspective.\n *\n * @param {CallSite} frame Incoming frame to check for user relevance.\n * @returns {boolean} Whether the frame is relevant for end developer debugging.\n */\nexport function isRelevantFrame(frame)\n{\n  const wrappedFrame = wrapCallSite(frame)\n  const generatedFile = frame.getFileName()\n\n  var sourceFile = wrappedFrame.getFileName()\n  var functionName = wrappedFrame.getFunctionName()\n\n  // Filter out all raw files which do not have any source mapping\n  // This typically removes most of the build related infrastructure\n  // which is neither application or framework code.\n  const isCompiled = sourceFile !== generatedFile\n  if (!isCompiled) {\n    return false\n  }\n\n  // Filter out specific functions e.g. webpack require wrappers\n  if (FUNCTION_NAME_FILTERS.some((regexp) => regexp.test(functionName))) {\n    return false\n  }\n\n  // Filter out specific source files e.g. webpack bootstrap implementation\n  if (SOURCE_FILE_FILTERS.some((regexp) => regexp.test(sourceFile))) {\n    return false\n  }\n\n  return true\n}\n\n\n/**\n * Filters the existing list of CallSites to drop non user-relevant ones.\n *\n * @param {CallSite[]} frames List of CallSite objects.\n * @returns {CallSite[]} Filtered CallSite list.\n */\nexport function getRelevantFrames(frames) {\n  return frames.filter(isRelevantFrame)\n}\n\n\n/**\n * Processes a single CallSite entry to filter out build tool related or internal APIs.\n * During this process the method also uses source maps to figure out the original source location.\n * The CallSite API is documented in here: https://github.com/v8/v8/wiki/Stack-Trace-API#customizing-stack-traces.\n *\n * @param {CallSite} frame The current CallSite object to process.\n * @returns {string} Stringified CallSite object with usage of source maps to refer source location.\n */\nexport function frameToString(frame)\n{\n  const wrappedFrame = wrapCallSite(frame)\n\n  var sourceFile = wrappedFrame.getFileName()\n  var functionName = wrappedFrame.getFunctionName()\n  var typeName = wrappedFrame.getTypeName()\n\n  // Ignore some cryptic function names which typically are just function calls\n  if (FUNCTION_NAME_CLEARANCE.some((regexp) => regexp.test(functionName))) {\n    functionName = \"\"\n  }\n\n  // Filter out configured type names\n  if (TYPE_NAME_CLEARANCE.some((regexp) => regexp.test(typeName))) {\n    typeName = \"\"\n  }\n\n  // Strip out generated filename part from source field\n  sourceFile = cleanSourceFileName(sourceFile)\n\n  // Retrieve source file locations\n  const lineNumber = wrappedFrame.getLineNumber()\n  const columnNumber = wrappedFrame.getColumnNumber()\n\n  var identifier = functionName || typeName || \"<anonymous>\"\n\n  // Stack frames are displayed in the following format:\n  //   at FunctionName (<Fully-qualified name/URL>:<line number>:<column number>)\n  // Via: https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\n  return `at ${identifier}@${sourceFile}:${lineNumber}:${columnNumber}`\n}\n\n\n/**\n * Build the stack property for V8 as V8 is documented to use whatever this call returns\n * as the value of the stack property.\n *\n * @param {Error} nativeError Native JavaScript Error Object.\n * @param {CallSite[]} structuredStackTrace A structured representation of the stack.\n * @returns {string} Generated `stack` property for error object.\n */\nexport function prepareStackTrace(nativeError, structuredStackTrace)\n{\n  var frames = getRelevantFrames(structuredStackTrace)\n  var firstFrame = frames[0]\n\n  // Need the first frame for highlighting affected source code, sometimes that's not available.\n  if (firstFrame != null)\n  {\n    var wrappedFirstFrame = wrapCallSite(firstFrame)\n    var sourceFile = cleanSourceFileName(wrappedFirstFrame.getFileName())\n\n    var sourceText = \"\"\n    try {\n      sourceText = readFileSync(sourceFile, \"utf-8\")\n    } catch (error) {\n      // Ignore errors\n    }\n\n    // Generate highlighted code frame and attach it to the native error object (for later usage)\n    if (sourceText) {\n      const result = codeFrame(sourceText,\n        wrappedFirstFrame.getLineNumber(), wrappedFirstFrame.getColumnNumber(), CODE_FRAME_OPTIONS)\n      nativeError.code = result\n    }\n  }\n\n  return frames.map((frame) => frameToString(frame))\n    .filter((item) => item != null)\n    .join(\"\\n\")\n}\n\n\n/**\n * Highlights the given stacktrace object using `chalk.\n *\n * @param {Stack} stack Stacktrace result string.\n * @returns {string} Highlighted stack trace for NodeJS.\n */\nexport function highlightStack(stack)\n{\n  return stack.split(\"\\n\").map((line) => {\n    if (line.startsWith(\"at \"))\n    {\n      /* eslint-disable max-params */\n      return line.replace(/(at )(.*?)(@)(.*?):([0-9]+)(:)([0-9]+)/,\n        (match, intro, id, symbol, filename, lineNo, separator, columnNo) =>\n        `  - ${chalk.white(id)} ${chalk.dim(filename)} [${chalk.yellow(lineNo)}:${chalk.yellow(columnNo)}]`)\n    }\n\n    return chalk.yellow(line)\n  }).join(\"\\n\")\n}\n\n\n/**\n * Logs the given error to the NodeJS console.\n *\n * @param {Error} nativeError Native JavaScript Error Object.\n */\nexport function logError(nativeError)\n{\n  /* eslint-disable no-console */\n  if (nativeError instanceof Error)\n  {\n    // Triggering generating formatted stacktrace\n    String(nativeError.stack)\n\n    const formattedMessage = chalk.red(nativeError.name + \": \" + nativeError.message)\n    const formattedStack = highlightStack(nativeError.stack)\n\n    // Optionally display source code except\n    if (nativeError.code) {\n      console.error(`${formattedMessage}\\n\\n${nativeError.code}\\n\\n${formattedStack}`)\n    } else {\n      console.error(`${formattedMessage}\\n\\n${formattedStack}`)\n    }\n  }\n  else\n  {\n    console.error(nativeError)\n  }\n}\n\n\n/**\n * Enable enhanced stack traces.\n *\n * @param {boolean} debug Whether debugging should be enabled.\n */\nexport function enableEnhancedStackTraces(debug = false)\n{\n  // Override native Promise API with faster and more developerr friendly bluebird\n  global.Promise = require(\"bluebird\")\n\n  /* eslint-disable no-use-extend-native/no-use-extend-native */\n  Promise.config({\n    longStackTraces: debug,\n    warnings: debug\n  })\n\n  // Catch unhandled Promise rejections and pass them over to our log handler\n  process.on(\"unhandledRejection\", (reason, promise) => logError(reason))\n\n  // Catch uncaught exceptions and pass them over to our log handler\n  process.on(\"uncaughtException\", (error) => logError(error))\n\n  // Enable by hooking into V8 Stacktrace API integration\n  // https://github.com/v8/v8/wiki/Stack-Trace-API\n  Error.prepareStackTrace = prepareStackTrace\n\n  console.log(\"Activated enhanced stack traces\")\n}\n","// This file is just for exporting infrastructure to applications built upon this.\n\n// Polyfill for fetch() API in NodeJS based on code from\n// https://github.com/matthew-andrews/isomorphic-fetch/blob/master/fetch-npm-node.js\nif (!global.fetch) {\n  var realFetch = require(\"node-fetch\")\n  global.fetch = function fetch(url, options) {\n    const normalized = (/^\\/\\//).test(url) ? `https:${url}` : url\n    return realFetch.call(this, normalized, options)\n  }\n  global.Response = realFetch.Response\n  global.Headers = realFetch.Headers\n  global.Request = realFetch.Request\n}\n\nexport * from \"./common\"\nexport * from \"./server/loadImport\"\n\nexport { default as renderPage } from \"./server/renderPage\"\nexport { default as renderApplication } from \"./server/renderApplication\"\nexport { default as getLocaleData } from \"./server/getLocaleData\"\nexport { default as prepareResponse } from \"./server/prepareResponse\"\n\nexport * from \"./server/debug\"\n"],"names":["composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","emptyReducer","previousState","emptyMiddleware","next","action","emptyEnhancer","param","edgeReducer","createRootReducer","reducers","router","apollo","allReducers","location","reducer","combineReducers","createReduxStore","config","middlewares","enhancers","state","rootReducer","rootEnhancers","applyMiddleware","middleware","require","enhancer","store","createStore","createApolloClient","headers","uri","batchRequests","trustNetwork","queryDeduplication","ssrMode","client","opts","networkInterface","createBatchingNetworkInterface","createNetworkInterface","ApolloClient","createHistory","createReduxRouter","routes","path","history","connectRoutes","loadImport","wrapped","module","__webpack_require__","resolve","__esModule","preloadImport","add","chunkName","PREFER_NATIVE","intlSupportTable","feature","requiresIntlPolyfill","locale","global","Intl","areIntlLocalesSupported","installIntlPolyfill","Polyfill","IntlPolyfill","log","NumberFormat","DateTimeFormat","requiresReactIntl","installReactIntl","getLocale","edge","intl","getLanguage","language","getRegion","region","ensureReactIntlSupport","importWrapper","preloadImportServer","ensureIntlSupport","browser","hasIntlSupport","clientHasIntl","stats","family","toLowerCase","major","error","wrapApplication","Application","kernel","Wrapped","deepFetch","rootElement","reactTreeWalker","element","instance","fetchData","routed","ChildComponent","type","connect","payload","currentLocation","currentPayload","defaultState","createKernel","State","request","getRoutes","apolloClientConfig","getApolloClientConfig","getReducers","getEnhancers","getMiddlewares","WrappedApplication","Date","Promise","all","thunk","start","result","renderPage","html","styles","scripts","Error","length","helmet","Helmet","renderStatic","inlineCode","serialize","isJSON","nonceHtml","nonce","htmlAttributes","toString","title","meta","link","style","script","renderApplication","clientStats","response","getState","httpStatus","NOT_FOUND","kind","redirect","pathname","ReactDOM","renderToString","err","chunkNames","flushChunkNames","join","flushChunks","js","cssHash","renderedPage","setHeader","status","send","getLocaleData","source","warn","DEFAULT_LOCALE","splitted","split","prepareResponse","parse","FUNCTION_NAME_FILTERS","SOURCE_FILE_FILTERS","FUNCTION_NAME_CLEARANCE","TYPE_NAME_CLEARANCE","CODE_FRAME_OPTIONS","cleanSourceFileName","sourceFile","cleanFile","charAt","slice","isRelevantFrame","frame","wrappedFrame","wrapCallSite","generatedFile","getFileName","functionName","getFunctionName","some","regexp","test","getRelevantFrames","frames","filter","frameToString","typeName","getTypeName","lineNumber","getLineNumber","columnNumber","getColumnNumber","identifier","prepareStackTrace","nativeError","structuredStackTrace","firstFrame","wrappedFirstFrame","sourceText","readFileSync","codeFrame","code","map","item","highlightStack","stack","line","startsWith","replace","match","intro","id","symbol","filename","lineNo","separator","columnNo","chalk","white","dim","yellow","logError","formattedMessage","red","name","message","formattedStack","enableEnhancedStackTraces","debug","on","reason","fetch","realFetch","url","options","normalized","call","Response","Headers","Request"],"mappings":"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"}